#!/usr/bin/env node

/**
 * Script para cambiar la configuraci√≥n de DevTools en producci√≥n
 * Uso: node scripts/toggle-devtools.cjs [true|false]
 */

const fs = require('fs');
const path = require('path');

const configPath = path.join(__dirname, '..', 'devtoolsenprod.json');

function readConfig() {
  try {
    const content = fs.readFileSync(configPath, 'utf8');
    return JSON.parse(content);
  } catch (err) {
    console.error('‚ùå Error al leer la configuraci√≥n:', err.message);
    process.exit(1);
  }
}

function writeConfig(config) {
  try {
    fs.writeFileSync(configPath, JSON.stringify(config, null, 2));
    console.log('‚úÖ Configuraci√≥n actualizada correctamente');
  } catch (err) {
    console.error('‚ùå Error al escribir la configuraci√≥n:', err.message);
    process.exit(1);
  }
}

function showCurrentConfig() {
  const config = readConfig();
  const currentValue = config.enableDevToolsInProduction;
  console.log(`\nüîß Configuraci√≥n actual de DevTools en producci√≥n:`);
  console.log(`   enableDevToolsInProduction: ${currentValue}`);
  console.log(`   Estado: ${currentValue ? 'üü¢ HABILITADAS' : 'üî¥ DESHABILITADAS'}`);
  
  if (currentValue) {
    console.log(`\n‚ö†Ô∏è  ADVERTENCIA: Las DevTools est√°n habilitadas en producci√≥n.`);
    console.log(`   Esto puede exponer informaci√≥n sensible a los usuarios finales.`);
    console.log(`   Considera cambiarlo a 'false' antes de distribuir la aplicaci√≥n.`);
  }
}

function toggleConfig(newValue) {
  const config = readConfig();
  const oldValue = config.enableDevToolsInProduction;
  
  if (newValue === undefined) {
    // Toggle el valor actual
    newValue = !oldValue;
  }
  
  config.enableDevToolsInProduction = newValue;
  writeConfig(config);
  
  console.log(`\nüîÑ DevTools en producci√≥n cambiadas:`);
  console.log(`   ${oldValue} ‚Üí ${newValue}`);
  console.log(`   Estado: ${newValue ? 'üü¢ HABILITADAS' : 'üî¥ DESHABILITADAS'}`);
  
  if (newValue) {
    console.log(`\nüìù Las DevTools ahora estar√°n disponibles en producci√≥n.`);
    console.log(`   Recuerda cambiar esto a 'false' antes de distribuir.`);
  } else {
    console.log(`\n‚úÖ Las DevTools est√°n deshabilitadas en producci√≥n (recomendado).`);
  }
}

function showHelp() {
  console.log(`
üîß Script de configuraci√≥n de DevTools en producci√≥n

Uso:
  node scripts/toggle-devtools.cjs [comando]

Comandos:
  true          - Habilita DevTools en producci√≥n
  false         - Deshabilita DevTools en producci√≥n
  toggle        - Cambia el valor actual (true ‚Üî false)
  status        - Muestra la configuraci√≥n actual
  help          - Muestra esta ayuda

Ejemplos:
  node scripts/toggle-devtools.cjs true     # Habilita DevTools
  node scripts/toggle-devtools.cjs false    # Deshabilita DevTools
  node scripts/toggle-devtools.cjs toggle   # Cambia el valor actual
  node scripts/toggle-devtools.cjs status   # Muestra estado actual

‚ö†Ô∏è  ADVERTENCIA: Habilitar DevTools en producci√≥n puede exponer informaci√≥n sensible.
   Solo usa 'true' para depuraci√≥n y cambia a 'false' antes de distribuir.
`);
}

// Procesar argumentos de l√≠nea de comandos
const args = process.argv.slice(2);
const command = args[0];

if (!command || command === 'help' || command === '--help' || command === '-h') {
  showHelp();
} else if (command === 'status') {
  showCurrentConfig();
} else if (command === 'toggle') {
  toggleConfig();
} else if (command === 'true') {
  toggleConfig(true);
} else if (command === 'false') {
  toggleConfig(false);
} else {
  console.error(`‚ùå Comando no v√°lido: ${command}`);
  console.log('Usa "node scripts/toggle-devtools.cjs help" para ver la ayuda');
  process.exit(1);
}
